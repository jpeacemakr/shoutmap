Notes:


import jsCookie from "js-cookie";


jsCookie.get("zip") ? 
			searchZip = jsCookie.get("zip") : null;



 { /* I could not get either of these to work getShoutlist().map((item:Shout) => (<li key={item._id}> Email {item.username}</li>)) */ }
              { /*getShoutlist().map((item) => (<li key={item._id}> Email {item.username}</li>))
              */ }



copies an array in Javascript

const cloneSheepsES6 = [...sheeps];




////ionic 

ionic serve //development testing

ionic build //builds the site

//then run 
 npm install -g serve
  serve -s build

//it run son port 5000?


api is running on port 3000

restart nginx
sudo service nginx restart


run server with pm2 start nameofjavascriptfile.js
(might need to stop with pm2 stop nameoffile.js)

//list running jobs
jobs

//kill job number
kill %number


//nginx server settings
sudo vim /etc/nginx/sites-available/default



server {
    listen 80;

    server_name 35.188.249.235;

    location / {
        proxy_pass http://10.150.0.2:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

-- install nginx with "sudo apt-get update"
then "apt-get install nginx"
-- start nginx with "sudo nginx"
-- check status of all services with "service --status-all"

sudo service nginx restart


-- check status of pm2
pm2 status



build production server??
ionic build --prod




chrome://flags/#unsafely-treat-insecure-origin-as-secure

http://35.236.233.53/

//uses pm2 to serve the build folder
//run in the shoutmap folder so it can find build
pm2 serve build




CORS
.......................
on api side

const Express = require("express");
var cors = require('cors')

var app = Express();
app.use(cors());


/////////////
firebase interaction
https://firebase.google.com/docs/auth/admin/verify-id-tokens#web




CLIENT SIDE
/////////////////////send token
 firebase.auth().currentUser.getIdToken(/* forceRefresh */ true).then(function(idToken) {
    // Send token to your backend via HTTPS
    // ...
  }).catch(function(error) {
    // Handle error
  });





API SIDE
//////////////////
var admin = require("firebase-admin");

//need to change this line
var serviceAccount = require("path/to/serviceAccountKey.json");

admin.initializeApp({
  credential: admin.credential.cert(serviceAccount),
  databaseURL: "https://cpsc-225-241503.firebaseio.com"
});

////////////////
check token

// idToken comes from the client app
admin.auth().verifyIdToken(idToken)
  .then(function(decodedToken) {
    let uid = decodedToken.uid;
    // ...
  }).catch(function(error) {
    // Handle error
  });